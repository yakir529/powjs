if (!window.Promise || typeof window.Promise == "undefined") {
    !function (e, n) { "object" == typeof exports && "undefined" != typeof module ? n() : "function" == typeof define && define.amd ? define(n) : n() }(0, function () { "use strict"; function e(e) { var n = this.constructor; return this.then(function (t) { return n.resolve(e()).then(function () { return t }) }, function (t) { return n.resolve(e()).then(function () { return n.reject(t) }) }) } function n() { } function t(e) { if (!(this instanceof t)) throw new TypeError("Promises must be constructed via new"); if ("function" != typeof e) throw new TypeError("not a function"); this._state = 0, this._handled = !1, this._value = undefined, this._deferreds = [], u(e, this) } function o(e, n) { for (; 3 === e._state;) e = e._value; 0 !== e._state ? (e._handled = !0, t._immediateFn(function () { var t = 1 === e._state ? n.onFulfilled : n.onRejected; if (null !== t) { var o; try { o = t(e._value) } catch (f) { return void i(n.promise, f) } r(n.promise, o) } else (1 === e._state ? r : i)(n.promise, e._value) })) : e._deferreds.push(n) } function r(e, n) { try { if (n === e) throw new TypeError("A promise cannot be resolved with itself."); if (n && ("object" == typeof n || "function" == typeof n)) { var o = n.then; if (n instanceof t) return e._state = 3, e._value = n, void f(e); if ("function" == typeof o) return void u(function (e, n) { return function () { e.apply(n, arguments) } }(o, n), e) } e._state = 1, e._value = n, f(e) } catch (r) { i(e, r) } } function i(e, n) { e._state = 2, e._value = n, f(e) } function f(e) { 2 === e._state && 0 === e._deferreds.length && t._immediateFn(function () { e._handled || t._unhandledRejectionFn(e._value) }); for (var n = 0, r = e._deferreds.length; r > n; n++) o(e, e._deferreds[n]); e._deferreds = null } function u(e, n) { var t = !1; try { e(function (e) { t || (t = !0, r(n, e)) }, function (e) { t || (t = !0, i(n, e)) }) } catch (o) { if (t) return; t = !0, i(n, o) } } var c = setTimeout; t.prototype["catch"] = function (e) { return this.then(null, e) }, t.prototype.then = function (e, t) { var r = new this.constructor(n); return o(this, new function (e, n, t) { this.onFulfilled = "function" == typeof e ? e : null, this.onRejected = "function" == typeof n ? n : null, this.promise = t }(e, t, r)), r }, t.prototype["finally"] = e, t.all = function (e) { return new t(function (n, t) { function o(e, f) { try { if (f && ("object" == typeof f || "function" == typeof f)) { var u = f.then; if ("function" == typeof u) return void u.call(f, function (n) { o(e, n) }, t) } r[e] = f, 0 == --i && n(r) } catch (c) { t(c) } } if (!e || "undefined" == typeof e.length) throw new TypeError("Promise.all accepts an array"); var r = Array.prototype.slice.call(e); if (0 === r.length) return n([]); for (var i = r.length, f = 0; r.length > f; f++) o(f, r[f]) }) }, t.resolve = function (e) { return e && "object" == typeof e && e.constructor === t ? e : new t(function (n) { n(e) }) }, t.reject = function (e) { return new t(function (n, t) { t(e) }) }, t.race = function (e) { return new t(function (n, t) { for (var o = 0, r = e.length; r > o; o++) e[o].then(n, t) }) }, t._immediateFn = "function" == typeof setImmediate && function (e) { setImmediate(e) } || function (e) { c(e, 0) }, t._unhandledRejectionFn = function (e) { void 0 !== console && console && console.warn("Possible Unhandled Promise Rejection:", e) }; var l = function () { if ("undefined" != typeof self) return self; if ("undefined" != typeof window) return window; if ("undefined" != typeof global) return global; throw Error("unable to locate global object") }(); "Promise" in l ? l.Promise.prototype["finally"] || (l.Promise.prototype["finally"] = e) : l.Promise = t });
}

if (!String.prototype.Format) {
    /*/ add string format method as buffer so no need to use the + operator in numerus times (optimal when you need more then 5 + operators) /*/
    String.prototype.Format = function () {
        var str = this.toString();
        if (!arguments.length)
            return str;
        var argumentsToReturn = typeof arguments[0];

        argumentsToReturn = (("string" === argumentsToReturn || "number" === argumentsToReturn) ? arguments : arguments[0]);

        return str.replace(/\{([0-9]+)\}/g, function (key, val) {
            return argumentsToReturn[val];
        });
    };
}

if (!String.prototype.ToBoolean) {
    String.prototype.ToBoolean = function () {
        return this.toLowerCase() === 'true';
    };
}

if (typeof Object.assign != 'function') {
    Object.defineProperty(Object, "assign", {
        value: function assign(i_target, varArgs) {
            'use strict';
            if (i_target == null) {
                throw new TypeError('Cannot convert undefined or null to object');
            }

            var _dest = Object(i_target);

            for (var i = 1; i < arguments.length; i++) {
                var _nextSource = arguments[i];

                if (_nextSource != null) {
                    for (var nextKey in _nextSource) {
                        if (Object.prototype.hasOwnProperty.call(_nextSource, nextKey)) {
                            _dest[nextKey] = _nextSource[nextKey];
                        }
                    }
                }
            }
            return _dest;
        },
        writable: true,
        configurable: true
    });
}

if (!Object.getOwnPropertyDescriptors) {
    Object.getOwnPropertyDescriptors = function getOwnPropertyDescriptors(obj) {
        var descriptors = {};
        for (var prop in obj) {
            if (obj.hasOwnProperty(prop)) {
                descriptors[prop] = Object.getOwnPropertyDescriptor(obj, prop);
            }
        }
        return descriptors;
    };
}
var $pow = $pow || {};
$pow.Components = $pow.Components || {};

$pow.Components.http = (function(){
    var Caller = (function(){
        function Caller(){ }

        Caller.prototype.Post = function(i_path, i_dataToSend, i_callback){
            if (isValidCall("post", i_path, i_dataToSend, i_callback)) {
                var xhr = new XMLHttpRequest();
                
                xhr.open('POST', i_path);
                xhr.onload = function() {
                    if (xhr.status === 200) {
                        i_callback(xhr.responseText);
                    }
                };
                
                if (i_dataToSend) xhr.send(encodeURI(i_dataToSend));
                else xhr.send();
            }
        }
        
        Caller.prototype.Get = function(i_path, i_callback){
            if (isValidCall("get", i_path, null, i_callback)) {
                var xhr = new XMLHttpRequest();
                
                xhr.open('GET', i_path);
                xhr.onload = function() {
                    if (xhr.status === 200) {
                        i_callback(xhr.responseText);
                    }
                };
                xhr.send(encodeURI(i_path));
            }
        }

        function isValidCall(i_callType, i_path, i_dataToSend, i_callback){
            return (i_path 
                    && typeof i_path == "string" 
                    && (!i_callback 
                        || (i_callback 
                            && typeof i_callback == "function")))? true : false;
        }

        return Caller;
    })();

    return {
        GetInstance: function(){
            return new Caller();
        }
    };
})();
//----------------------------------------------------------------/ POW /----------------------------------------------------------------//
var $pow = $pow || {};

//----------------------------------------------------------------/ FACTORIES /----------------------------------------------------------------//
$pow.Store = (function () {
    var m_instance,
        StoreHandler = (function () {
            var m_storage = {};
            function StoreHandler() {
                this.Components = getComponents();
            }

            StoreHandler.prototype.Add = function (i_slug, i_data) {
                m_storage[i_slug] = i_data;
            }

            StoreHandler.prototype.Get = function (i_slug) {
                return m_storage[i_slug];
            }

            StoreHandler.prototype.IsExists = function (i_slug) {
                return m_storage[i_slug] || this.Components.IsExists(i_slug) ? true : false;
            }

            StoreHandler.prototype.GetEventsDictionary = function () {
                return {};
            }

            function getComponents() {
                return (function () {
                    var m_componentsInstance,
                        ComponentsHandler = (function () {
                            var m_componentsList = {};

                            function ComponentsHandler() {
                                m_componentsList = $pow.Components;
                            }

                            ComponentsHandler.prototype.GetInstanceOf = function (i_componentName) {
                                return m_componentsList[i_componentName].GetInstance();
                            }

                            ComponentsHandler.prototype.IsExists = function (i_componentName) {
                                return m_componentsList[i_componentName] ? true : false;
                            }

                            return ComponentsHandler;
                        })();

                    function createInstance() {
                        if (!m_componentsInstance) m_componentsInstance = new ComponentsHandler();
                        return m_componentsInstance;
                    }

                    return createInstance();
                })();
            }

            return StoreHandler;
        })();

    function createInstance() {
        if (!m_instance) m_instance = new StoreHandler();
        return m_instance;
    }

    return createInstance();
})();

$pow.ComponentsFactory = (function () {
    var m_instance,
        ComponentsFactoryInstance = (function () {
            function ComponentsFactoryInstance() { }

            ComponentsFactoryInstance.prototype.Create = function (i_componentName) {
                if (isValidComponent(i_componentName)) {
                    return $pow.Store.Components.GetInstanceOf(i_componentName);
                }
            }

            function isValidComponent(i_componentName) {
                return (typeof i_componentName !== "undefined"
                    && i_componentName
                    && i_componentName.length
                    && isComponentExists(i_componentName)) ?
                    true : false;
            }

            function isComponentExists(i_componentName) {
                return $pow.Store.IsExists(i_componentName);
            }

            return ComponentsFactoryInstance;
        })();

    function createInstance() {
        if (!m_instance) m_instance = new ComponentsFactoryInstance();
        return m_instance;
    }

    return createInstance();
})();

$pow.ControllersFactory = (function () {
    var m_instance,
        ControllersFactoryInstance = (function (createController) {
            function ControllersFactoryInstance() { }

            ControllersFactoryInstance.prototype.Create = function (i_definitions) {
                if (isValidDefinitions(i_definitions)) {
                    var _controller = createController(i_definitions);
                    $pow.Store.Add(i_definitions.Identifier, _controller);
                }
            }

            function isValidDefinitions(i_definitions) {
                return (typeof i_definitions !== "undefined"
                    && i_definitions
                    && typeof i_definitions.Methods !== "undefined"
                    && typeof i_definitions.Identifier === "string") ?
                    true : false;
            }

            return ControllersFactoryInstance;
        })(createController),
        Controller = (function () {
            function Controller(i_definitions) {
                this.Methods = i_definitions.Methods;
                this.Identifier = i_definitions.Identifier;
                this.UsingService = bindServices(i_definitions.UsingService);
            }

            function bindServices(i_using) {
                //todo: attach each component as an internal object like -> Controller.http.post
                var o_using = {}
                if (i_using) {
                    var v_serviceInstance = {};
                    for (var key in i_using) {
                        v_serviceInstance = $pow.Store.Get(i_using[key]);
                        if (!v_serviceInstance) console.warn("bad service: " + i_using[key]);
                        else o_using[i_using[key]] = v_serviceInstance;
                    }
                }
                return o_using;
            }

            return Controller;
        })();

    function createController(i_definitions) {
        return new Controller(i_definitions);
    }

    function createInstance() {
        if (!m_instance) m_instance = new ControllersFactoryInstance();
        return m_instance;
    }

    return createInstance();
})();


$pow.ServicesFactory = (function () {
    var m_instance,
        ServicesFactoryInstance = (function (createService) {
            function ServicesFactoryInstance() { }

            ServicesFactoryInstance.prototype.Create = function (i_definitions) {
                if (isValidDefinitions(i_definitions)) {
                    var _service = createService(i_definitions);
                    $pow.Store.Add(i_definitions.Identifier, _service);
                    return _service;
                }
            }

            function isValidDefinitions(i_definitions) {
                return (typeof i_definitions !== "undefined"
                    && i_definitions
                    && typeof i_definitions.Methods !== "undefined"
                    && typeof i_definitions.Identifier === "string") ?
                    true : false;
            }

            return ServicesFactoryInstance;
        })(createService),
        Service = (function () {
            function Service(i_definitions) {
                this.Methods = {};
                this.Identifier = i_definitions.Identifier;
                this.UsingComponent = bindComponents(i_definitions.UsingComponent);
                Object.assign(this.Methods, i_definitions.Methods, { "UsingComponent": this.UsingComponent });
            }

            function bindComponents(i_using) {
                var o_using = {}
                if (i_using) {
                    var v_componentInstance = {};
                    for (var key in i_using) {
                        v_componentInstance = $pow.ComponentsFactory.Create(i_using[key]);
                        if (!v_componentInstance) console.warn("bad component: " + i_using[key]);
                        else o_using[i_using[key]] = v_componentInstance;
                    }
                }
                return o_using;
            }

            return Service;
        })();

    function createService(i_definitions) {
        return new Service(i_definitions);
    }

    function createInstance() {
        if (!m_instance) m_instance = new ServicesFactoryInstance();
        return m_instance;
    }

    return createInstance();
})();

$pow.View = (function () {
    var m_instance,
        ViewHandler = (function () {
            var EventConsumer = (function () {
                var m_eventIMPL,
                    m_elem,
                    m_elementToAttach,
                    m_invokeIMPL,
                    m_delegate,
                    m_bubble,
                    m_identifier,
                    m_self;

                function EventConsumer(i_definitions = {}) {
                    m_eventName = i_definitions.Event ? i_definitions.Event : null;
                    m_selector = i_definitions.Selector ? i_definitions.Selector : null;
                    m_elementToAttach = i_definitions.AttachTo ? i_definitions.AttachTo : document;
                    m_invokeIMPL = i_definitions.Invoke ? i_definitions.Invoke : null;
                    m_delegate = i_definitions.Delegate ? i_definitions.Delegate : null;
                    m_bubble = i_definitions.Bubble ? i_definitions.Bubble : false;
                    m_identifier = i_definitions.Identifier ? i_definitions.Identifier : "";
                    m_self = this;
                }

                function getSelf() {
                    return m_self;
                }

                EventConsumer.prototype.RegisterTo = {
                    ClickEvent: function () {
                        m_eventIMPL = function (i_controllerName, i_method, i_callbackIMPL) {
                            var _controller = $pow.Store.Get(i_controllerName),
                                _usingServicesArr = Object.getOwnPropertyNames(_controller.UsingService),
                                _availableServices = {},
                                _publicControllerActions = {};
                            
                            
                            for (var key = 0; key < _usingServicesArr.length; key++) {
                                _availableServices[_usingServicesArr[key]] = _controller.UsingService[_usingServicesArr[key]].Methods;
                            }

                            Object.assign(_publicControllerActions, {"UsingService": _availableServices}, {"Methods": _controller.Methods});

                            if (document.addEventListener) {
                                m_elementToAttach.addEventListener("click", function (e) {
                                    if (e.target === document.querySelector(m_selector)) {
                                        var o_data = (typeof m_invokeIMPL === "function") ? m_invokeIMPL(e) : {};
                                        e.data = o_data;
                                        _controller.Methods[i_method].apply(_publicControllerActions, [e, i_callbackIMPL]);
                                    }
                                }, m_bubble);
                            } else {
                                m_elementToAttach.attachEvent("onclick", function (e) {
                                    if (e.srcElement === document.querySelector(m_selector)) {
                                        var o_data = (typeof m_invokeIMPL === "function") ? m_invokeIMPL(e) : {};
                                        e.data = o_data;
                                        _controller.Methods[i_method].apply(_publicControllerActions, [e, i_callbackIMPL]);
                                    }
                                });
                            }
                        }

                        return getSelf();
                    }
                }

                EventConsumer.prototype.OnElement = function (i_selector, i_elementToAttach) {
                    m_selector = i_selector;
                    if (typeof i_elementToAttach != "undefined" && i_elementToAttach) m_elementToAttach = i_elementToAttach;
                    return this;
                }

                EventConsumer.prototype.YieldData = function (i_invokeIMPL) {
                    m_invokeIMPL = i_invokeIMPL;
                    return this;
                }

                EventConsumer.prototype.DelegateTo = function (i_controllerName, i_method, i_callbackIMPL) {
                    m_eventIMPL(i_controllerName, i_method, i_callbackIMPL);
                }

                return EventConsumer;
            })();

            function ViewHandler() { }

            function isValidDefinitions(i_definitions) {
                return (typeof i_definitions != "undefined"
                    && i_definitions
                    && i_definitions.Identifier) ? true : false;
            }

            ViewHandler.prototype.CreateEventConsumer = function (i_definition) {
                if (typeof i_definition === "string" && i_definition.length) {
                    var _eventConsumer = new EventConsumer();
                    $pow.Store.Add(i_definition, _eventConsumer);
                } else if (isValidDefinitions(i_definition)) {
                    var _eventConsumer = new EventConsumer(i_definition);
                    $pow.Store.Add(i_definition.Identifier, _eventConsumer);
                }
                return _eventConsumer;
            }

            ViewHandler.prototype.WhenDocumentReady = function (i_IMPL) {
                if (typeof i_IMPL === "function") {
                    if (document.readyState != 'loading') i_IMPL();
                    else if (document.addEventListener) document.addEventListener('DOMContentLoaded', i_IMPL);
                    else document.attachEvent('onreadystatechange', function () { if (document.readyState != 'loading') i_IMPL(); });
                }
            }

            return ViewHandler;
        })();

    function createInstance() {
        if (!m_instance) m_instance = new ViewHandler();
        return m_instance;
    }

    return createInstance();
})();
